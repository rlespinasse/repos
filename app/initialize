#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

# Load utility methods
. "$ROOT_DIR/utils"

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    cli_call check configuration

    root_folder=$(cli_call rc read '.root_folder')
    root_folder="${root_folder/#\~/$HOME}"

    while read -r sitekey;
    do
        while IFS="," read -r name site api nametype token;
        do
            all_repos=$(curl -s "${api}/${nametype}/${name}/repos?access_token=${token}&per_page=100" | jq -r ".[].name" | sort)

            while read -r repo;
            do
                includerepos=$(cli_call rc read '.sites["'"$sitekey"'"].repositories.include')
                excluderepos=$(cli_call rc read '.sites["'"$sitekey"'"].repositories.exclude')

                status="excluded"
                if [ "$includerepos" == "[]" ] && [ "$excluderepos" == "[]" ];
                then
                    status="initialize_it"
                else
                    includerepo=$(cli_call rc read '.sites["'"$sitekey"'"].repositories | select(.include[] | contains ("'"$repo"'"))')
                    excluderepo=$(cli_call rc read '.sites["'"$sitekey"'"].repositories | select(.exclude[] | contains ("'"$repo"'"))')
                    if [ -z "$excluderepo" ] && [ -n "$includerepo" ]; then
                        status="initialize_it"
                    fi
                fi

                if [ "$status" == "initialize_it" ]; then
                    mkdir -p "${root_folder}/${site}/${name}"
                    if [ ! -d "${root_folder}/${site}/${name}/${repo}" ];
                    then
                        info "Clone ${site}/${name}/${repo}"

                        mkdir -p "${root_folder}/repos/${site}/${name}"
                        git clone "git@${site}:${name}/${repo}.git" "${root_folder}/${site}/${name}/${repo}"

                        while IFS="=" read -r key value;
                        do

                            info "${root_folder}/${site}/${name}/${repo} - apply configuration $key = $value"
                            git -C "${root_folder}/${site}/${name}/${repo}" config "$key" "$value"
                        done < <(cli_call rc read '.sites["'"$sitekey"'"].config | to_entries[] | [.key, .value] | "\(.[0])=\(.[1])"' | sed '/^$/d')
                    fi
                elif [ "$status" == "excluded" ]; then
                    warning "${site}/${name}/${repo} excluded"
                fi
            done < <(echo "${all_repos}")
        done < <(cli_call rc read '.sites["'"$sitekey"'"] | [.owner, .site, .api, .type, .token] | join(",")')
    done < <(cli_call rc read '.sites | to_entries[] | .key' | sed '/^$/d')

fi
